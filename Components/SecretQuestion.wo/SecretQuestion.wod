HaveQuestion : ERXNonNullConditional {
  condition = cptWork.cptQuestion;
}

Question : WOString {
  value = cptWork.cptQuestion;
}

Else : ERXElse {
}

HaveResponse : ERXNonNullConditional {
  condition = cptWork.cptReponse;
}


CanChangePwd : WOConditional {
  condition = canChangePwd;
}

AulAjouter : AjaxUpdateLink {
  updateContainerID = zoneEditionId;
  action = editQuestion;
  onSuccess = onEditQuestion;
  button = true;
  value = "Modifier la question secrète";
}

AmdEditQuestion : AjaxModalDialog {
  width = "600";
	title = "Question secrète";
	id = editQuestionId;
	showOpener = false;
	button = true;
	centerVertically = true;
}
ErreurContainer : AjaxUpdateContainer {
	id = erreurContainerid;
	style = "z-index:9999;";
}

MessageUtil : MessageUtil {
  idMessage = messageid;
  idErreur = erreurContainerid;
}

ScriptClose : WOJavaScript {
	scriptString = scriptCloseDialog;
}
AofQuestion : AjaxObserveField {
  updateContainerID = questionPersoId;
  fullSubmit = true;
}

PobQuestion : WOPopUpButton {
  list = lstQuestions;
  item = questionOccur;
  selection = selectedQuestion;
  noSelectionString = "Saisir une question personnelle";
  displayString = questionOccur.qsLibelle;
}

IsPersoQuest : ERXNonNullConditional { 
  condition = selectedQuestion;
  negate = true; 
}
PersoQuest : WOTextField {
  value = persoQuestion;
  style = "min-width: 400px;"; 
}
AucPersoQuest : AjaxUpdateContainer {
  id = questionPersoId;
}

Reponse : WOTextField { 
  value = reponse; 
  style = "min-width: 400px;"; 
}

AsbValide : AjaxSubmitButton {
  updateContainerID = questionZoneId;
  action = valide;
  value = "Valider";
}
AulCancel : AjaxUpdateLink {
  updateContainerID = questionReponseId;
  action = cancelChange;
  onSuccess = "function(cancel){Modalbox.hide();}";
  button = true;
  value = "Fermer";
}

AucQuestionReponse : AjaxUpdateContainer {
  id = questionReponseId;
}

AucZoneEdition : AjaxUpdateContainer {
  id = zoneEditionId;
}

frm : ERXOptionalForm {
  multipleSubmit = true;
}

AucQuestionZone : AjaxUpdateContainer {
  id = questionZoneId;
}
